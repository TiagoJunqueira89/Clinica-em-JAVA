package view;

import dataAccessObject.UtenteDAO;
import exception.ExcepcaoDAO;
import java.util.List;
import starter.MenuPrincipal;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Utente;

/**
 *
 * @author Tiago Junqueira
 */
public final class MenuUtentes extends javax.swing.JFrame {
    // Inst√¢ncia da classe
    UtenteDAO utenteDAO = new UtenteDAO();

    /**
     * Creates new form MenuUtentes
     */
    public MenuUtentes() {
        initComponents();
        ocultarColunaID();
        setLocationRelativeTo(null);
        atualizarTabelaUtentes();
    }

    /**
     * This method is called from within the constructor to initialize the form
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // Removed unnecessary @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnCriar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtContacto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnCriar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCriar.setText("Criar Utente");
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditar.setText("Editar Utente");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnApagar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnApagar.setText("Apagar Utente");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 126, 107));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(51, 126, 107));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 255, 235));
        jLabel1.setText("Gerir Utentes");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Contacto");

        btnVoltar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Nome do utente", "Contacto do utente"
            }
        ));
        jScrollPane1.setViewportView(tb);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Selecione um utente para editar");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Selecione um utente para apagar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(btnApagar)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCriar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApagar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        new MenuPrincipal().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        // TODO add your handling code here:                                          
        apagarUtente();
    }//GEN-LAST:event_btnApagarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:                                          
        editarUtente();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarActionPerformed
        // TODO add your handling code here:                                        
        criarUtente();
    }//GEN-LAST:event_btnCriarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnCriar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb;
    private javax.swing.JTextField txtContacto;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
    /**
     * Ocultar a coluna do id
     */
    private void ocultarColunaID() {
        tb.getColumnModel().getColumn(0).setMinWidth(0);
        tb.getColumnModel().getColumn(0).setMaxWidth(0);
        tb.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
    /**
    * Atualiza a JTable com a lista de utentes obtida da base de dados
    */
    public void atualizarTabelaUtentes() {
        try {
            // Obter a lista de utentes atrav√©s do DAO
            List<Utente> lista = utenteDAO.lerTodosUtentes();

            // Obter o modelo da JTable e remover todas as linhas existentes
            DefaultTableModel model = (DefaultTableModel) tb.getModel();
            model.setRowCount(0);

            // Para cada utente, adicionar uma nova linha com os dados (ID, Nome, Contacto)
            for (Utente utente : lista) {
                Object[] linha = {utente.getId(), utente.getNome(), utente.getContacto()};
                model.addRow(linha);
            }
        } catch (ExcepcaoDAO ex) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao carregar os utentes: " + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Apaga um utente selecionado na JTable
     */
    private void apagarUtente() {
        // Obter a linha selecionada na JTable
        int linhaSelecionada = tb.getSelectedRow();

        // Verificar se alguma linha foi selecionada
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(MenuUtentes.this,
                    "Selecione um utente para apagar",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            // Exibir caixa de confirma√ß√£o para apagar
            int confirmacao = JOptionPane.showConfirmDialog(MenuUtentes.this,
                    "Tem a certeza que pretende apagar o utente selecionado?",
                    "Confirmar Apagar",
                    JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {
                // Obter o ID do utente a partir da primeira coluna da linha selecionada
                int id = (int) tb.getValueAt(linhaSelecionada, 0);
                try {
                    // Chamar o m√©todo do DAO para apagar o utente na base de dados
                    utenteDAO.apagarUtente(id);
                    
                    // Remover a linha do modelo da tabela
                    DefaultTableModel model = (DefaultTableModel) tb.getModel();
                    model.removeRow(linhaSelecionada);

                    JOptionPane.showMessageDialog(MenuUtentes.this,
                            "Utente apagado com sucesso!");
                } catch (ExcepcaoDAO ex) {
                    JOptionPane.showMessageDialog(MenuUtentes.this,
                            "Erro ao apagar o utente: " + ex.getMessage(),
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    
    /**
     * Edita um utente selecionado na JTable
     */
    private void editarUtente() {
        int linhaSelecionada = tb.getSelectedRow();
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(MenuUtentes.this, "Selecione um utente para editar.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obter o ID, nome atual e contacto atual da linha selecionada na JTable.
        int id = Integer.parseInt(tb.getValueAt(linhaSelecionada, 0).toString());
        String nomeAtual = tb.getValueAt(linhaSelecionada, 1).toString();
        String contactoAtual = tb.getValueAt(linhaSelecionada, 2).toString();

        // Solicitar ao utilizador os novos valores, com os dados atuais como padr√£o.
        String novoNome = JOptionPane.showInputDialog(MenuUtentes.this, "Novo nome:", nomeAtual);
        if (novoNome == null) {
            return; // O utilizador cancelou.
        }
        String novoContacto = JOptionPane.showInputDialog(MenuUtentes.this, "Novo contacto:", contactoAtual);
        if (novoContacto == null) {
            return; // O utilizador cancelou.
        }

        // Verificar se os campos n√£o est√£o vazios.
        if (novoNome.trim().isEmpty() || novoContacto.trim().isEmpty()) {
            JOptionPane.showMessageDialog(MenuUtentes.this, "Todos os campos devem ser preenchidos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Valida√ß√£o: o contacto deve conter apenas d√≠gitos.
        if (!novoContacto.matches("\\d+")) {
            JOptionPane.showMessageDialog(MenuUtentes.this, "O contacto deve conter apenas n√∫meros!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Criar o objeto utente com os dados actualizados.
        Utente utenteAtualizado = new Utente(id, novoNome, novoContacto);
        try {
            // Actualizar o utente na base de dados atrav√©s do DAO.
            utenteDAO.actualizarUtente(utenteAtualizado);
            JOptionPane.showMessageDialog(MenuUtentes.this, "Utente actualizado com sucesso!");
            atualizarTabelaUtentes(); // M√©todo que atualiza os dados exibidos na JTable.
        } catch (ExcepcaoDAO ex) {
            JOptionPane.showMessageDialog(MenuUtentes.this, "Erro ao actualizar o utente: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Cria um novo utente
     */
    private void criarUtente() {
        // Obter os valores dos campos de texto e remover espa√ßos em branco nas extremidades
        String nome = txtNome.getText().trim();
        String contacto = txtContacto.getText().trim();

        // Valida√ß√£o: verificar se os campos n√£o est√£o vazios
        if (nome.isEmpty() || contacto.isEmpty()) {
            JOptionPane.showMessageDialog(MenuUtentes.this,
                    "Todos os campos devem ser preenchidos!",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Valida√ß√£o: o contacto deve conter apenas d√≠gitos
        if (!contacto.matches("\\d+")) {
            JOptionPane.showMessageDialog(MenuUtentes.this,
                    "O contacto deve conter apenas n√∫meros!",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Criar o objeto Utente com os dados fornecidos
        Utente novoUtente = new Utente(0, nome, contacto);
        try {
            // Tentar criar o utente na base de dados atrav√©s do DAO
            utenteDAO.criarUtente(novoUtente);
            JOptionPane.showMessageDialog(MenuUtentes.this,
                    "Utente criado com sucesso!");

            // Atualizar a JTable para refletir o novo utente
            atualizarTabelaUtentes();

            // Limpar os campos de texto para nova entrada
            txtNome.setText("");
            txtContacto.setText("");
        } catch (ExcepcaoDAO ex) {
            JOptionPane.showMessageDialog(MenuUtentes.this,
                    "Erro ao criar utente: " + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }
}
